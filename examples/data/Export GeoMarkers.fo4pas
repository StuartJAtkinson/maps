{
  Pip-boy Map GeoMarkers Export for xEdit by Joric (c) 2024
  Hotkey: Ctrl+Shift+G
}

unit UserScript;

uses SysUtils;

procedure ReadCoordinates(ChildObj: TJsonObject; ref: IInterface);
var path: string;
begin
  path := 'DATA\Position';
  ChildObj.A['coordinates'].Add ( GetElementNativeValues(ref, path+'\X') );
  ChildObj.A['coordinates'].Add ( GetElementNativeValues(ref, path+'\Y') );
  ChildObj.A['coordinates'].Add ( GetElementNativeValues(ref, path+'\Z') );
end;

function Finalize: integer;
var
  i: integer;
  f, e, r, area, cell: IInterface;
  path: string;
  GeoJSON, MarkerObj: TJsonObject;
begin
  f := FileByIndex(8);

  GeoJSON := TJsonObject.Create;
  GeoJSON.S['type'] := 'FeatureCollection';

  r := RecordByFormID(FileByIndex(0), $00000010, False);
  for i := 0 to Pred(ReferencedByCount(r)) do begin
    e := ReferencedByIndex(r, i);
    if GetFile(e) <> f then continue;
    cell := LinksTo(ElementByName(e, 'Cell'));

    MarkerObj := GeoJSON.A['features'].AddObject;
    MarkerObj.S['type'] := 'Feature';
    MarkerObj.O['geometry'].S['type'] := 'Point';
    ReadCoordinates(MarkerObj.O['geometry'], e);

    MarkerObj.O['properties'].S['title'] := GetElementEditValues(e, 'Map Marker\FULL');
    MarkerObj.O['properties'].S['description'] := GetElementEditValues(e, 'Map Marker\TNAM\Type');
    MarkerObj.O['properties'].S['ref_id'] := IntToHex(GetLoadOrderFormID(e), 8);

    area := LinksTo(ElementByName(cell, 'Worldspace'));
    if Assigned(area) then begin
      MarkerObj.O['properties'].S['area'] := EditorID(area);
    end;

  end;

  path := extractfilepath(paramstr(0))+'../../examples/data/geojson.markers.folon.json';
  AddMessage('Saving ' + path + ' ...');

  GeoJSON.SaveToFile(path, False, TEncoding.UTF8, True);
end;

end.

